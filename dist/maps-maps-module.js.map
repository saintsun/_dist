{"version":3,"sources":["webpack:///./node_modules/@ngui/map/esm5/ngui-map.js","webpack:///./src/.pages/maps/google/google.component.html","webpack:///./src/.pages/maps/google/google.component.scss","webpack:///./src/.pages/maps/google/google.component.ts","webpack:///./src/.pages/maps/maps.module.ts","webpack:///./src/.pages/maps/maps.routing.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AAC4K;AACpJ;AACA;AACX;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,0KAA0K,8FAA8F;AACxQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,gDAAgD,4BAA4B,0DAAY,GAAG,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,2BAA2B,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,mCAAmC,EAAE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,sBAAsB,OAAO,oDAAM,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,aAAa;AACrF;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,6CAA6C,EAAE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,EAAE;AAChC;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD,mBAAmB,+CAAU;AAC7B;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB,oCAAoC,EAAE;AACzE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB;AACA,8BAA8B,4DAAc;AAC5C;AACA;AACA;AACA,wBAAwB,kDAAa;AACrC,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,4CAA4C,qCAAqC,EAAE,EAAE;AAChI;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,0BAA0B,EAAE;AAC7E,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB;AACA,0DAA0D;AAC1D,KAAK,OAAO,oDAAM,GAAG;AACrB,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,gCAAgC,IAAI;AAC1G,EAAE;AACF;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qCAAqC;AAC9E;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB;AACA,kDAAkD;AAClD,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,gCAAgC,IAAI;AAC1G,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA,wCAAwC,wDAAwD,EAAE;AAClG,SAAS;AACT;AACA;AACA,+CAA+C,0BAA0B,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB;AACA,uCAAuC;AACvC,KAAK,wBAAwB;AAC7B,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,wBAAwB,EAAE;AAC1G;AACA;AACA;AACA,oDAAoD,wBAAwB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,0CAA0C,EAAE;AACtF,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,+BAA+B,EAAE;AACjF;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB;AACA,sCAAsC;AACtC,KAAK,kBAAkB;AACvB,KAAK,uBAAuB;AAC5B,KAAK,OAAO,oDAAM,GAAG;AACrB,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA;AACA,2CAA2C,4BAA4B,0DAAY,GAAG,EAAE;AACxF;AACA;AACA;AACA;AACA,kBAAkB,4DAAK;AACvB,oCAAoC,8BAA8B,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,qCAAqC,mEAAY,QAAQ,0DAAG,qBAAqB,6DAA6D,EAAE;AAChJ;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,mCAAmC,0BAA0B;AAC7D;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,0CAA0C,eAAe,gBAAgB,mBAAmB,YAAY,cAAc;AACtH;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA,aAAa,IAAI;AACjB;AACA,+CAA+C;AAC/C,KAAK,uBAAuB;AAC5B,KAAK,OAAO,wDAAU,GAAG;AACzB,KAAK,8BAA8B;AACnC,KAAK,kBAAkB;AACvB,KAAK,iBAAiB;AACtB,KAAK,wBAAwB;AAC7B,KAAK,OAAO,oDAAM,GAAG;AACrB,EAAE;AACF;AACA,mBAAmB,OAAO,oDAAM,EAAE;AAClC;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA,6CAA6C;AAC7C,KAAK,0BAA0B;AAC/B,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA,iCAAiC,4CAAO;AACxC;AACA,6CAA6C,4BAA4B,0DAAY,GAAG,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,2BAA2B,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mEAAY,QAAQ,0DAAG,qBAAqB,oEAAoE,EAAE;AAClJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA,yCAAyC;AACzC,KAAK,OAAO,wDAAU,GAAG;AACzB,KAAK,iBAAiB;AACtB,KAAK,0BAA0B;AAC/B,EAAE;AACF;AACA,sBAAsB,OAAO,oDAAM,EAAE;AACrC,kBAAkB,OAAO,uDAAS,sBAAsB,OAAO,8DAAgB,EAAE,IAAI;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uDAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,0BAA0B,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C,iCAAiC,4CAAO;AACxC;AACA,6CAA6C,4BAA4B,0DAAY,GAAG,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,2BAA2B,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mEAAY,QAAQ,0DAAG,qBAAqB,mEAAmE,EAAE;AACjJ;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA,2CAA2C;AAC3C,KAAK,0BAA0B;AAC/B,KAAK,OAAO,wDAAU,GAAG;AACzB,KAAK,iBAAiB;AACtB,EAAE;AACF;AACA,sBAAsB,OAAO,oDAAM,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,wEAAwE,0BAA0B;AAClG;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA,qCAAqC;AACrC,KAAK,0BAA0B;AAC/B,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA,wCAAwC;AACxC,KAAK,0BAA0B;AAC/B,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA,iDAAiD;AACjD,KAAK,0BAA0B;AAC/B,KAAK,8BAA8B;AACnC,EAAE;AACF;AACA,2BAA2B,OAAO,mDAAK,iCAAiC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA,6CAA6C;AAC7C,KAAK,0BAA0B;AAC/B,EAAE;AACF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA,4CAA4C;AAC5C,KAAK,0BAA0B;AAC/B,EAAE;AACF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA,2CAA2C;AAC3C,KAAK,0BAA0B;AAC/B,EAAE;AACF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA,uCAAuC;AACvC,KAAK,0BAA0B;AAC/B,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,2BAA2B,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,wEAAwE,4BAA4B;AACpG;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA,qCAAqC;AACrC,KAAK,0BAA0B;AAC/B,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,kBAAkB,4DAAK;AACvB,oCAAoC,2BAA2B,EAAE;AACjE;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa,IAAI;AACjB;AACA,iDAAiD;AACjD,KAAK,uBAAuB;AAC5B,KAAK,OAAO,wDAAU,GAAG;AACzB,KAAK,wBAAwB;AAC7B,EAAE;AACF;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,+BAA+B,OAAO,mDAAK,EAAE;AAC7C,eAAe,OAAO,mDAAK,EAAE;AAC7B,uBAAuB,OAAO,oDAAM,4BAA4B;AAChE,sBAAsB,OAAO,oDAAM,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA,sCAAsC;AACtC,KAAK,0BAA0B;AAC/B,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA,uCAAuC;AACvC,KAAK,0BAA0B;AAC/B,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA,iDAAiD;AACjD,KAAK,0BAA0B;AAC/B,EAAE;AACF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA,2CAA2C;AAC3C,KAAK,0BAA0B;AAC/B,EAAE;AACF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,CAAC;AACD;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","file":"maps-maps-module.js","sourcesContent":["import { __extends } from 'tslib';\nimport { EventEmitter, Output, Injectable, InjectionToken, Inject, Optional, NgZone, Component, ElementRef, ViewEncapsulation, Directive, ViewChild, ViewContainerRef, Input, NgModule } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { debounceTime, tap, first } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\n\nfunction jsonize(str) {\n    try {\n        JSON.parse(str);\n        return str;\n    }\n    catch (e) {\n        return str\n            .replace(/([\\$\\w]+)\\s*:/g, function (_, $1) {\n            return '\"' + $1 + '\":';\n        })\n            .replace(/'([^']+)'/g, function (_, $1) {\n            return '\"' + $1 + '\"';\n        });\n    }\n}\nfunction getJSON(input) {\n    if (typeof input === 'string') {\n        var re = /^[\\+\\-]?[0-9\\.]+,[ ]*\\ ?[\\+\\-]?[0-9\\.]+$/;\n        if (input.match(re)) {\n            input = '[' + input + ']';\n        }\n        return JSON.parse(jsonize(input));\n    }\n    else {\n        return input;\n    }\n}\nfunction toCamelCase(str) {\n    return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (letter, index) {\n        return index === 0 ? letter.toLowerCase() : letter.toUpperCase();\n    }).replace(/\\s+/g, '');\n}\nfunction isMapsApiLoaded() {\n    return typeof google === 'object' && typeof google.maps === 'object';\n}\nfunction missingLibraryError(component, libName) {\n    return Error(component + \": library '\" + libName + \"' is missing, please ensure to include it in a 'libraries' parameter.\\n    Example:\\n      NguiMapModule.forRoot({\\n        apiUrl: 'https://maps.googleapis.com/maps/api/js?libraries=\" + libName + \"'\\n      })\\n  \");\n}\nvar BaseMapDirective = /** @class */ (function () {\n    function BaseMapDirective(nguiMapComponent, mapObjectName, inputs, outputs) {\n        var _this = this;\n        this.nguiMapComponent = nguiMapComponent;\n        this.mapObjectName = mapObjectName;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.initialized$ = new EventEmitter();\n        this._subscriptions = [];\n        this.nguiMap = this.nguiMapComponent['nguiMap'];\n        this.optionBuilder = this.nguiMapComponent['optionBuilder'];\n        this.outputs.forEach(function (output) { return _this[output] = new EventEmitter(); });\n        this.mapObjectName = mapObjectName;\n    }\n    BaseMapDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.nguiMapComponent.mapIdledOnce) {\n            this.initialize();\n        }\n        else {\n            this.nguiMapComponent.mapReady$.subscribe(function (map) { return _this.initialize(); });\n        }\n    };\n    BaseMapDirective.prototype.initialize = function () {\n        this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n        typeof this.objectOptions.position === 'string' && (delete this.objectOptions.position);\n        typeof this.objectOptions.center === 'string' && (delete this.objectOptions.center);\n        if (this.libraryName) {\n            if (!google.maps[this.libraryName]) {\n                throw missingLibraryError(this.mapObjectName, this.libraryName);\n            }\n            this.mapObject = new google.maps[this.libraryName][this.mapObjectName](this.objectOptions);\n        }\n        else {\n            this.mapObject = new google.maps[this.mapObjectName](this.objectOptions);\n        }\n        this.mapObject.setMap(this.nguiMapComponent.map);\n        this.mapObject['mapObjectName'] = this.mapObjectName;\n        this.mapObject['nguiMapComponent'] = this.nguiMapComponent;\n        this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n        this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n        this.initialized$.emit(this.mapObject);\n    };\n    BaseMapDirective.prototype.ngOnChanges = function (changes) {\n        this.nguiMap.updateGoogleObject(this.mapObject, changes);\n    };\n    BaseMapDirective.prototype.ngOnDestroy = function () {\n        this._subscriptions.map(function (subscription) { return subscription.unsubscribe(); });\n        this.nguiMapComponent.removeFromMapObjectGroup(this.mapObjectName, this.mapObject);\n        if (this.mapObject) {\n            this.nguiMap.clearObjectEvents(this.outputs, this, 'mapObject');\n        }\n    };\n    return BaseMapDirective;\n}());\nBaseMapDirective.propDecorators = {\n    \"initialized$\": [{ type: Output },],\n};\nvar OptionBuilder = /** @class */ (function () {\n    function OptionBuilder() {\n    }\n    OptionBuilder.prototype.googlizeAllInputs = function (definedInputs, userInputs) {\n        var _this = this;\n        var options = {};\n        if (userInputs.options) {\n            options = userInputs.options;\n            if (!this.onlyOptionsGiven(definedInputs, userInputs)) {\n                console.error('when \"options\" are used, other options are ignored');\n            }\n        }\n        else {\n            definedInputs.forEach(function (input) {\n                if (userInputs[input] !== undefined) {\n                    options[input] = _this.googlize(userInputs[input], { key: input });\n                }\n            });\n        }\n        return options;\n    };\n    OptionBuilder.prototype.googlizeMultiple = function (inputs, options) {\n        options = options || {};\n        for (var key in inputs) {\n            var val = inputs[key];\n            if (typeof val !== 'string') {\n                options[key] = val;\n            }\n            else if (!(options['doNotConverStringToNumber'] && val.match(/^[0-9]+$/))) {\n                options[key] = this.googlize(val, { key: key });\n            }\n        }\n        return options;\n    };\n    OptionBuilder.prototype.googlize = function (input, options) {\n        options = options || {};\n        var output = input;\n        if (typeof input === 'string') {\n            if (input === 'false') {\n                output = false;\n            }\n            else if (input === '0') {\n                output = 0;\n            }\n            else {\n                output =\n                    this.getJSONParsed(input, options)\n                        || this.getAnyMapObject(input)\n                        || this.getAnyMapConstant(input, options)\n                        || this.getDateObject(input)\n                        || input;\n            }\n        }\n        if (options['key']) {\n            var key = (options['key']);\n            if (output instanceof Array) {\n                if (key === 'bounds') {\n                    output = new google.maps.LatLngBounds(output[0], output[1]);\n                }\n                else if (key === 'icons') {\n                    output = this.getMapIcons(output);\n                }\n                else if (key === 'position' || key.match(/^geoFallback/)) {\n                    output = this.getLatLng(output);\n                }\n            }\n            else if (output instanceof Object) {\n                if (key === 'icon') {\n                    output = this.getMarkerIcon(output);\n                }\n                else if (key.match(/ControlOptions$/)) {\n                    output = this.getMapControlOption(output);\n                }\n            }\n        }\n        delete output['doNotConverStringToNumber'];\n        delete output['key'];\n        return output;\n    };\n    OptionBuilder.prototype.getLatLng = function (input) {\n        var output;\n        if (input[0].constructor === Array) {\n            output = ((input)).map(function (el) { return new google.maps.LatLng(el[0], el[1]); });\n        }\n        else if (!isNaN(parseFloat(input[0])) && isFinite(input[0])) {\n            output = new google.maps.LatLng(input[0], input[1]);\n        }\n        return output;\n    };\n    OptionBuilder.prototype.getJSONParsed = function (input, options) {\n        var output;\n        try {\n            output = getJSON(input);\n            if (output instanceof Array) {\n                if (output[0].constructor !== Object) {\n                    output = this.getLatLng(output);\n                }\n            }\n            else if (output === Object(output)) {\n                var newOptions = options;\n                newOptions['doNotConverStringToNumber'] = true;\n                output = this.googlizeMultiple(output, newOptions);\n            }\n        }\n        catch (e) {\n        }\n        return output;\n    };\n    OptionBuilder.prototype.getAnyMapObject = function (input) {\n        var output;\n        if (input.match(/^[A-Z][a-zA-Z0-9]+\\(.*\\)$/)) {\n            try {\n                output = Function(\"return new google.maps.\" + input + \";\")();\n            }\n            catch (e) { }\n        }\n        return output;\n    };\n    OptionBuilder.prototype.getAnyMapConstant = function (input, options) {\n        var output;\n        if (input.match(/^([A-Z][a-zA-Z0-9]+)\\.([A-Z]+)$/)) {\n            try {\n                var matches = input.match(/^([A-Z][a-zA-Z0-9]+)\\.([A-Z]+)$/);\n                output = google.maps[matches[1]][matches[2]];\n            }\n            catch (e) { }\n        }\n        else if (input.match(/^[A-Z]+$/)) {\n            try {\n                var capitalizedKey = ((options['key'])).charAt(0).toUpperCase() +\n                    ((options['key'])).slice(1);\n                output = google.maps[capitalizedKey][input];\n            }\n            catch (e) { }\n        }\n        return output;\n    };\n    OptionBuilder.prototype.getMapControlOption = function (controlOptions) {\n        var newControlOptions = controlOptions;\n        for (var key in newControlOptions) {\n            if (newControlOptions[key]) {\n                var value = newControlOptions[key];\n                if (typeof value === 'string') {\n                    value = ((value)).toUpperCase();\n                }\n                else if (key === 'mapTypeIds') {\n                    value = ((value)).map(function (str) {\n                        if (str.match(/^[A-Z]+$/)) {\n                            return google.maps.MapTypeId[str.toUpperCase()];\n                        }\n                        else {\n                            return str;\n                        }\n                    });\n                }\n                if (key === 'style') {\n                    var objName = key.replace(/Options$/, '') + 'Style';\n                    newControlOptions[key] = google.maps[objName][(value)];\n                }\n                else if (key === 'position') {\n                    newControlOptions[key] = google.maps.ControlPosition[(value)];\n                }\n                else {\n                    newControlOptions[key] = value;\n                }\n            }\n        }\n        return newControlOptions;\n    };\n    OptionBuilder.prototype.getDateObject = function (input) {\n        var output;\n        if (input.match(/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*)?)([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/)) {\n            try {\n                output = new Date(input);\n            }\n            catch (e) { }\n        }\n        return output;\n    };\n    OptionBuilder.prototype.getMapIcons = function (input) {\n        return input.map(function (el) {\n            if (el.icon.path.match(/^[A-Z_]+$/)) {\n                el.icon.path = google.maps.SymbolPath[el.icon.path];\n            }\n            return el;\n        });\n    };\n    OptionBuilder.prototype.getMarkerIcon = function (input) {\n        var output = input;\n        if (('' + output.path).match(/^[A-Z_]+$/)) {\n            output.path = google.maps.SymbolPath[output.path];\n        }\n        for (var key in output) {\n            var arr = output[key];\n            if (key === 'anchor' || key === 'origin' || key === 'labelOrigin') {\n                output[key] = new google.maps.Point(arr[0], arr[1]);\n            }\n            else if (key === 'size' || key === 'scaledSize') {\n                output[key] = new google.maps.Size(arr[0], arr[1]);\n            }\n        }\n        return output;\n    };\n    OptionBuilder.prototype.onlyOptionsGiven = function (definedInputs, userInputs) {\n        for (var i = 0; i < definedInputs.length; i++) {\n            var input = definedInputs[i];\n            if (input !== 'options' && typeof userInputs[input] !== 'undefined') {\n                return false;\n            }\n        }\n        return true;\n    };\n    return OptionBuilder;\n}());\nOptionBuilder.decorators = [\n    { type: Injectable },\n];\nvar NavigatorGeolocation = /** @class */ (function () {\n    function NavigatorGeolocation() {\n    }\n    NavigatorGeolocation.prototype.getCurrentPosition = function (geoLocationOptions) {\n        geoLocationOptions = geoLocationOptions || { timeout: 5000 };\n        return new Observable(function (responseObserver) {\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(function (position) {\n                    responseObserver.next(position);\n                    responseObserver.complete();\n                }, function (evt) { return responseObserver.error(evt); }, geoLocationOptions);\n            }\n            else {\n                responseObserver.error('Browser Geolocation service failed.');\n            }\n        });\n    };\n    return NavigatorGeolocation;\n}());\nNavigatorGeolocation.decorators = [\n    { type: Injectable },\n];\nvar NG_MAP_CONFIG_TOKEN = new InjectionToken('NG_MAP_CONFIG_TOKEN');\nvar NgMapApiLoader = /** @class */ (function () {\n    function NgMapApiLoader(config) {\n        this.config = config;\n        this.api$ = new ReplaySubject(1);\n        this.config = this.config || { apiUrl: 'https://maps.google.com/maps/api/js' };\n    }\n    NgMapApiLoader.prototype.ngOnDestroy = function () {\n        this.api$.complete();\n    };\n    return NgMapApiLoader;\n}());\nvar NgMapAsyncCallbackApiLoader = /** @class */ (function (_super) {\n    __extends(NgMapAsyncCallbackApiLoader, _super);\n    function NgMapAsyncCallbackApiLoader(zone, config) {\n        var _this = _super.call(this, config) || this;\n        _this.zone = zone;\n        return _this;\n    }\n    NgMapAsyncCallbackApiLoader.prototype.load = function () {\n        var _this = this;\n        if (typeof window === 'undefined') {\n            return;\n        }\n        if (isMapsApiLoaded()) {\n            this.api$.next(google.maps);\n        }\n        else if (!document.querySelector('#ngui-map-api')) {\n            ((window))['nguiMapRef'] = ((window))['nguiMapRef'] || [];\n            ((window))['nguiMapRef'].push({ zone: this.zone, componentFn: function () { return _this.api$.next(google.maps); } });\n            this.addGoogleMapsApi();\n        }\n    };\n    NgMapAsyncCallbackApiLoader.prototype.addGoogleMapsApi = function () {\n        ((window))['initNguiMap'] = ((window))['initNguiMap'] || function () {\n            ((window))['nguiMapRef'].forEach(function (nguiMapRef) {\n                nguiMapRef.zone.run(function () { nguiMapRef.componentFn(); });\n            });\n            ((window))['nguiMapRef'].splice(0, ((window))['nguiMapRef'].length);\n        };\n        var script = document.createElement('script');\n        script.id = 'ngui-map-api';\n        var apiUrl = this.config.apiUrl;\n        apiUrl += apiUrl.indexOf('?') !== -1 ? '&' : '?';\n        script.src = apiUrl + 'callback=initNguiMap';\n        document.querySelector('body').appendChild(script);\n    };\n    return NgMapAsyncCallbackApiLoader;\n}(NgMapApiLoader));\nNgMapAsyncCallbackApiLoader.decorators = [\n    { type: Injectable },\n];\nNgMapAsyncCallbackApiLoader.ctorParameters = function () { return [\n    { type: NgZone, },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NG_MAP_CONFIG_TOKEN,] },] },\n]; };\nvar NgMapAsyncApiLoader = /** @class */ (function (_super) {\n    __extends(NgMapAsyncApiLoader, _super);\n    function NgMapAsyncApiLoader(config) {\n        return _super.call(this, config) || this;\n    }\n    NgMapAsyncApiLoader.prototype.load = function () {\n        var _this = this;\n        if (typeof window === 'undefined') {\n            return;\n        }\n        if (isMapsApiLoaded()) {\n            this.api$.next(google.maps);\n        }\n        else if (!document.querySelector('#ngui-map-api')) {\n            var script = document.createElement('script');\n            script.id = 'ngui-map-api';\n            script.async = true;\n            script.onload = function () { return _this.api$.next(google.maps); };\n            script.src = this.config.apiUrl;\n            document.querySelector('body').appendChild(script);\n        }\n    };\n    return NgMapAsyncApiLoader;\n}(NgMapApiLoader));\nNgMapAsyncApiLoader.decorators = [\n    { type: Injectable },\n];\nNgMapAsyncApiLoader.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NG_MAP_CONFIG_TOKEN,] },] },\n]; };\nvar GeoCoder = /** @class */ (function () {\n    function GeoCoder(apiLoader) {\n        this.apiLoader = apiLoader;\n        this.apiLoaderSubs = [];\n    }\n    GeoCoder.prototype.geocode = function (options) {\n        var _this = this;\n        return new Observable(function (responseObserver) {\n            _this.apiLoaderSubs.push(_this.apiLoader.api$\n                .subscribe(function () { return _this.requestGeocode(options, responseObserver); }));\n        });\n    };\n    GeoCoder.prototype.ngOnDestroy = function () {\n        this.apiLoaderSubs.map(function (sub) { return sub.unsubscribe(); });\n    };\n    GeoCoder.prototype.requestGeocode = function (options, observer) {\n        var geocoder = new google.maps.Geocoder();\n        geocoder.geocode(options, function (results, status) {\n            if (status === google.maps.GeocoderStatus.OK) {\n                observer.next(results);\n                observer.complete();\n            }\n            else {\n                observer.error(results);\n            }\n        });\n    };\n    return GeoCoder;\n}());\nGeoCoder.decorators = [\n    { type: Injectable },\n];\nGeoCoder.ctorParameters = function () { return [\n    { type: NgMapApiLoader, },\n]; };\nvar NguiMap = /** @class */ (function () {\n    function NguiMap(geoCoder, optionBuilder, zone) {\n        var _this = this;\n        this.geoCoder = geoCoder;\n        this.optionBuilder = optionBuilder;\n        this.zone = zone;\n        this.updateGoogleObject = function (object, changes) {\n            var val, currentValue, setMethodName;\n            if (object) {\n                for (var key in changes) {\n                    setMethodName = \"set\" + key.replace(/^[a-z]/, function (x) { return x.toUpperCase(); });\n                    currentValue = changes[key].currentValue;\n                    if (['position', 'center'].indexOf(key) !== -1 && typeof currentValue === 'string') {\n                        (function (setMethodName) {\n                            _this.geoCoder.geocode({ address: currentValue }).subscribe(function (results) {\n                                if (typeof object[setMethodName] === 'function') {\n                                    object[setMethodName](results[0].geometry.location);\n                                }\n                                else {\n                                    console.error('Not all options are dynamically updatable according to Googles Maps API V3 documentation.\\n' +\n                                        'Please check Google Maps API documentation, and use \"setOptions\" instead.');\n                                }\n                            });\n                        })(setMethodName);\n                    }\n                    else {\n                        val = _this.optionBuilder.googlize(currentValue);\n                        if (typeof object[setMethodName] === 'function') {\n                            object[setMethodName](val);\n                        }\n                        else {\n                            console.error('Not all options are dynamically updatable according to Googles Maps API V3 documentation.\\n' +\n                                'Please check Google Maps API documentation, and use \"setOptions\" instead.');\n                        }\n                    }\n                }\n            }\n        };\n    }\n    NguiMap.prototype.setObjectEvents = function (definedEvents, thisObj, prefix) {\n        var _this = this;\n        definedEvents.forEach(function (definedEvent) {\n            var eventName = _this.getEventName(definedEvent), zone = _this.zone;\n            zone.runOutsideAngular(function () {\n                thisObj[prefix].addListener(eventName, function (event) {\n                    var param = event ? event : {};\n                    param.target = this;\n                    zone.run(function () { return thisObj[definedEvent].emit(param); });\n                });\n            });\n        });\n    };\n    NguiMap.prototype.clearObjectEvents = function (definedEvents, thisObj, prefix) {\n        var _this = this;\n        definedEvents.forEach(function (definedEvent) {\n            var eventName = _this.getEventName(definedEvent);\n            _this.zone.runOutsideAngular(function () {\n                if (thisObj[prefix]) {\n                    google.maps.event.clearListeners(thisObj[prefix], eventName);\n                }\n            });\n        });\n        if (thisObj[prefix]) {\n            if (thisObj[prefix].setMap) {\n                thisObj[prefix].setMap(null);\n            }\n            delete thisObj[prefix].nguiMapComponent;\n            delete thisObj[prefix];\n        }\n    };\n    NguiMap.prototype.getEventName = function (definedEvent) {\n        return definedEvent\n            .replace(/([A-Z])/g, function ($1) { return \"_\" + $1.toLowerCase(); })\n            .replace(/^map_/, '');\n    };\n    return NguiMap;\n}());\nNguiMap.decorators = [\n    { type: Injectable },\n];\nNguiMap.ctorParameters = function () { return [\n    { type: GeoCoder, },\n    { type: OptionBuilder, },\n    { type: NgZone, },\n]; };\nvar INPUTS = [\n    'backgroundColor', 'center', 'disableDefaultUI', 'disableDoubleClickZoom', 'draggable', 'draggableCursor',\n    'draggingCursor', 'heading', 'keyboardShortcuts', 'mapMaker', 'mapTypeControl', 'mapTypeId', 'maxZoom', 'minZoom',\n    'noClear', 'overviewMapControl', 'panControl', 'panControlOptions', 'rotateControl', 'scaleControl', 'scrollwheel',\n    'streetView', 'styles', 'tilt', 'zoom', 'streetViewControl', 'zoomControl', 'zoomControlOptions', 'mapTypeControlOptions',\n    'overviewMapControlOptions', 'rotateControlOptions', 'scaleControlOptions', 'streetViewControlOptions', 'fullscreenControl', 'fullscreenControlOptions',\n    'options',\n    'geoFallbackCenter'\n];\nvar OUTPUTS = [\n    'bounds_changed', 'center_changed', 'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'heading_changed', 'idle',\n    'maptypeid_changed', 'mousemove', 'mouseout', 'mouseover', 'projection_changed', 'resize', 'rightclick',\n    'tilesloaded', 'tile_changed', 'zoom_changed',\n    'mapClick', 'mapMouseover', 'mapMouseout', 'mapMousemove', 'mapDrag', 'mapDragend', 'mapDragstart'\n];\nvar NguiMapComponent = /** @class */ (function () {\n    function NguiMapComponent(optionBuilder, elementRef, geolocation, geoCoder, nguiMap, apiLoader, zone) {\n        var _this = this;\n        this.optionBuilder = optionBuilder;\n        this.elementRef = elementRef;\n        this.geolocation = geolocation;\n        this.geoCoder = geoCoder;\n        this.nguiMap = nguiMap;\n        this.apiLoader = apiLoader;\n        this.zone = zone;\n        this.mapReady$ = new EventEmitter();\n        this.mapOptions = {};\n        this.inputChanges$ = new Subject();\n        this.infoWindows = {};\n        this.mapIdledOnce = false;\n        this.initializeMapAfterDisplayed = false;\n        apiLoader.load();\n        OUTPUTS.forEach(function (output) { return _this[output] = new EventEmitter(); });\n    }\n    NguiMapComponent.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        this.apiLoaderSub = this.apiLoader.api$\n            .pipe(first())\n            .subscribe(function () { return _this.initializeMap(); });\n    };\n    NguiMapComponent.prototype.ngAfterViewChecked = function () {\n        if (this.initializeMapAfterDisplayed && this.el && this.el.offsetWidth > 0) {\n            this.initializeMap();\n        }\n    };\n    NguiMapComponent.prototype.ngOnChanges = function (changes) {\n        this.inputChanges$.next(changes);\n    };\n    NguiMapComponent.prototype.initializeMap = function () {\n        var _this = this;\n        this.el = this.elementRef.nativeElement.querySelector('.google-map');\n        if (this.el && this.el.offsetWidth === 0) {\n            this.initializeMapAfterDisplayed = true;\n            return;\n        }\n        this.initializeMapAfterDisplayed = false;\n        this.mapOptions = this.optionBuilder.googlizeAllInputs(INPUTS, this);\n        this.mapOptions.zoom = this.mapOptions.zoom || 15;\n        typeof this.mapOptions.center === 'string' && (delete this.mapOptions.center);\n        this.zone.runOutsideAngular(function () {\n            _this.map = new google.maps.Map(_this.el, _this.mapOptions);\n            _this.map['mapObjectName'] = 'NguiMapComponent';\n            if (!_this.mapOptions.center) {\n                _this.setCenter();\n            }\n            _this.nguiMap.setObjectEvents(OUTPUTS, _this, 'map');\n            _this.map.addListener('idle', function () {\n                if (!_this.mapIdledOnce) {\n                    _this.mapIdledOnce = true;\n                    setTimeout(function () {\n                        _this.mapReady$.emit(_this.map);\n                    });\n                }\n            });\n            _this.inputChanges$.pipe(debounceTime(1000), tap(function (changes) { return _this.nguiMap.updateGoogleObject(_this.map, changes); })).subscribe();\n            if (typeof window !== 'undefined' && ((window))['nguiMapRef']) {\n                ((window))['nguiMapRef'].map = _this.map;\n            }\n        });\n    };\n    NguiMapComponent.prototype.setCenter = function () {\n        var _this = this;\n        if (!this['center']) {\n            this.geolocation.getCurrentPosition().subscribe(function (position) {\n                var latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n                _this.map.setCenter(latLng);\n            }, function (error) {\n                console.error('ngui-map: Error finding the current position');\n                _this.map.setCenter(_this.mapOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n            });\n        }\n        else if (typeof this['center'] === 'string') {\n            this.geoCoder.geocode({ address: this['center'] }).subscribe(function (results) {\n                _this.map.setCenter(results[0].geometry.location);\n            }, function (error) {\n                _this.map.setCenter(_this.mapOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n            });\n        }\n    };\n    NguiMapComponent.prototype.openInfoWindow = function (id, anchor) {\n        this.infoWindows[id].open(anchor);\n    };\n    NguiMapComponent.prototype.closeInfoWindow = function (id) {\n        if (this.infoWindows[id])\n            this.infoWindows[id].close();\n    };\n    NguiMapComponent.prototype.ngOnDestroy = function () {\n        this.inputChanges$.complete();\n        if (this.el && !this.initializeMapAfterDisplayed) {\n            this.nguiMap.clearObjectEvents(OUTPUTS, this, 'map');\n        }\n        if (this.apiLoaderSub) {\n            this.apiLoaderSub.unsubscribe();\n        }\n    };\n    NguiMapComponent.prototype.addToMapObjectGroup = function (mapObjectName, mapObject) {\n        var groupName = toCamelCase(mapObjectName.toLowerCase()) + 's';\n        this.map[groupName] = this.map[groupName] || [];\n        this.map[groupName].push(mapObject);\n    };\n    NguiMapComponent.prototype.removeFromMapObjectGroup = function (mapObjectName, mapObject) {\n        var groupName = toCamelCase(mapObjectName.toLowerCase()) + 's';\n        if (this.map && this.map[groupName]) {\n            var index = this.map[groupName].indexOf(mapObject);\n            (index > -1) && this.map[groupName].splice(index, 1);\n        }\n    };\n    return NguiMapComponent;\n}());\nNguiMapComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'ngui-map',\n                providers: [NguiMap, OptionBuilder, GeoCoder, NavigatorGeolocation],\n                styles: [\"\\n    ngui-map {display: block; height: 300px;}\\n    .google-map {width: 100%; height: 100%}\\n  \"],\n                inputs: INPUTS,\n                outputs: OUTPUTS,\n                encapsulation: ViewEncapsulation.None,\n                template: \"\\n    <div class=\\\"google-map\\\"></div>\\n    <ng-content></ng-content>\\n  \",\n            },] },\n];\nNguiMapComponent.ctorParameters = function () { return [\n    { type: OptionBuilder, },\n    { type: ElementRef, },\n    { type: NavigatorGeolocation, },\n    { type: GeoCoder, },\n    { type: NguiMap, },\n    { type: NgMapApiLoader, },\n    { type: NgZone, },\n]; };\nNguiMapComponent.propDecorators = {\n    \"mapReady$\": [{ type: Output },],\n};\nvar INPUTS$1 = [];\nvar OUTPUTS$1 = [];\nvar BicyclingLayer = /** @class */ (function (_super) {\n    __extends(BicyclingLayer, _super);\n    function BicyclingLayer(nguiMapComp) {\n        return _super.call(this, nguiMapComp, 'BicyclingLayer', INPUTS$1, OUTPUTS$1) || this;\n    }\n    return BicyclingLayer;\n}(BaseMapDirective));\nBicyclingLayer.decorators = [\n    { type: Directive, args: [{\n                selector: 'ngui-map > bicycling-layer',\n                inputs: INPUTS$1,\n                outputs: OUTPUTS$1,\n            },] },\n];\nBicyclingLayer.ctorParameters = function () { return [\n    { type: NguiMapComponent, },\n]; };\nvar INPUTS$2 = [\n    'content', 'disableAutoPan', 'maxWidth', 'pixelOffset', 'position', 'zIndex', 'options'\n];\nvar OUTPUTS$2 = [\n    'closeclick', 'content_changed', 'domready', 'position_changed', 'zindex_changed'\n];\nvar InfoWindow = /** @class */ (function () {\n    function InfoWindow(elementRef, nguiMap, nguiMapComponent) {\n        var _this = this;\n        this.elementRef = elementRef;\n        this.nguiMap = nguiMap;\n        this.nguiMapComponent = nguiMapComponent;\n        this.initialized$ = new EventEmitter();\n        this.objectOptions = {};\n        this.inputChanges$ = new Subject();\n        this.elementRef.nativeElement.style.display = 'none';\n        OUTPUTS$2.forEach(function (output) { return _this[output] = new EventEmitter(); });\n    }\n    InfoWindow.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.nguiMapComponent.mapIdledOnce) {\n            this.initialize();\n        }\n        else {\n            this.nguiMapComponent.mapReady$.subscribe(function (map) { return _this.initialize(); });\n        }\n    };\n    InfoWindow.prototype.ngOnChanges = function (changes) {\n        this.inputChanges$.next(changes);\n    };\n    InfoWindow.prototype.initialize = function () {\n        var _this = this;\n        this.objectOptions = this.nguiMapComponent.optionBuilder.googlizeAllInputs(INPUTS$2, this);\n        this.infoWindow = new google.maps.InfoWindow(this.objectOptions);\n        this.infoWindow['mapObjectName'] = 'InfoWindow';\n        if (this.elementRef.nativeElement.id) {\n            this.nguiMapComponent.infoWindows[this.elementRef.nativeElement.id] = this;\n        }\n        else {\n            console.error('An InfoWindow must have an id. e.g. id=\"detail\"');\n        }\n        this.nguiMap.setObjectEvents(OUTPUTS$2, this, 'infoWindow');\n        this.inputChanges$.pipe(debounceTime(1000), tap(function (changes) { return _this.nguiMap.updateGoogleObject(_this.infoWindow, changes); })).subscribe();\n        this.nguiMapComponent.addToMapObjectGroup('InfoWindow', this.infoWindow);\n        this.initialized$.emit(this.infoWindow);\n    };\n    InfoWindow.prototype.open = function (anchor) {\n        this.infoWindow.setContent(this.template.element.nativeElement);\n        this.infoWindow.open(this.nguiMapComponent.map, anchor);\n    };\n    InfoWindow.prototype.close = function () {\n        if (this.infoWindow)\n            this.infoWindow.close();\n    };\n    InfoWindow.prototype.ngOnDestroy = function () {\n        this.inputChanges$.complete();\n        if (this.infoWindow) {\n            this.nguiMap.clearObjectEvents(OUTPUTS$2, this, 'infoWindow');\n            delete this.infoWindow;\n        }\n    };\n    return InfoWindow;\n}());\nInfoWindow.decorators = [\n    { type: Component, args: [{\n                selector: 'ngui-map > info-window',\n                inputs: INPUTS$2,\n                outputs: OUTPUTS$2,\n                template: \"<div #template><ng-content></ng-content></div>\",\n            },] },\n];\nInfoWindow.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: NguiMap, },\n    { type: NguiMapComponent, },\n]; };\nInfoWindow.propDecorators = {\n    \"initialized$\": [{ type: Output },],\n    \"template\": [{ type: ViewChild, args: ['template', { read: ViewContainerRef },] },],\n};\nvar INPUTS$3 = [\n    'position'\n];\nvar OUTPUTS$3 = [\n    'animationChanged', 'click', 'clickableChanged', 'cursorChanged', 'dblclick', 'drag', 'dragend', 'draggableChanged',\n    'dragstart', 'flatChanged', 'iconChanged', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'positionChanged', 'rightclick',\n    'shapeChanged', 'titleChanged', 'visibleChanged', 'zindexChanged',\n    'map_click', 'map_mouseover', 'map_mouseout', 'map_mouseup', 'map_mousedown', 'map_drag', 'map_dragend'\n];\nfunction getCustomMarkerOverlayView(htmlEl, position) {\n    var CustomMarkerOverlayView = /** @class */ (function (_super) {\n        __extends(CustomMarkerOverlayView, _super);\n        function CustomMarkerOverlayView(htmlEl, position) {\n            var _this = _super.call(this) || this;\n            _this.visible = true;\n            _this.setPosition = function (position) {\n                _this.htmlEl.style.visibility = 'hidden';\n                if (position.constructor.name === 'Array') {\n                    _this.position = new google.maps.LatLng(position[0], position[1]);\n                }\n                else if (typeof position === 'string') {\n                    var geocoder = new google.maps.Geocoder();\n                    geocoder.geocode({ address: position }, function (results, status) {\n                        if (status === google.maps.GeocoderStatus.OK) {\n                            _this.setPosition(results[0].geometry.location);\n                        }\n                        else {\n                        }\n                    });\n                }\n                else if (position && typeof position.lng === 'function') {\n                    _this.position = position;\n                }\n                if (_this.getProjection() && typeof _this.position.lng === 'function') {\n                    var positionOnMap_1 = function () {\n                        var projection = _this.getProjection();\n                        if (!projection) {\n                            return;\n                        }\n                        var posPixel = projection.fromLatLngToDivPixel(_this.position);\n                        var x = Math.round(posPixel.x - (_this.htmlEl.offsetWidth / 2));\n                        var y = Math.round(posPixel.y - _this.htmlEl.offsetHeight / 2);\n                        _this.htmlEl.style.left = x + 'px';\n                        _this.htmlEl.style.top = y + 'px';\n                        _this.htmlEl.style.visibility = 'visible';\n                    };\n                    if (_this.htmlEl.offsetWidth && _this.htmlEl.offsetHeight) {\n                        positionOnMap_1();\n                    }\n                    else {\n                        setTimeout(function () { return positionOnMap_1(); });\n                    }\n                }\n            };\n            _this.htmlEl = htmlEl;\n            _this.position = position;\n            return _this;\n        }\n        CustomMarkerOverlayView.prototype.onAdd = function () {\n            this.getPanes().overlayMouseTarget.appendChild(this.htmlEl);\n            this.htmlEl.style.position = 'absolute';\n        };\n        CustomMarkerOverlayView.prototype.draw = function () {\n            this.setPosition(this.position);\n            this.setZIndex(this.zIndex);\n            this.setVisible(this.visible);\n        };\n        CustomMarkerOverlayView.prototype.onRemove = function () {\n        };\n        CustomMarkerOverlayView.prototype.getPosition = function () {\n            return this.position;\n        };\n        CustomMarkerOverlayView.prototype.setZIndex = function (zIndex) {\n            zIndex && (this.zIndex = zIndex);\n            this.htmlEl.style.zIndex = this.zIndex;\n        };\n        CustomMarkerOverlayView.prototype.setVisible = function (visible) {\n            this.htmlEl.style.display = visible ? 'inline-block' : 'none';\n            this.visible = visible;\n        };\n        return CustomMarkerOverlayView;\n    }(google.maps.OverlayView));\n    return new CustomMarkerOverlayView(htmlEl, position);\n}\nvar CustomMarker = /** @class */ (function () {\n    function CustomMarker(nguiMapComponent, elementRef, nguiMap) {\n        var _this = this;\n        this.nguiMapComponent = nguiMapComponent;\n        this.elementRef = elementRef;\n        this.nguiMap = nguiMap;\n        this.initialized$ = new EventEmitter();\n        this.inputChanges$ = new Subject();\n        this.elementRef.nativeElement.style.display = 'none';\n        OUTPUTS$3.forEach(function (output) { return _this[output] = new EventEmitter(); });\n    }\n    CustomMarker.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.nguiMapComponent.mapIdledOnce) {\n            this.initialize();\n        }\n        else {\n            this.nguiMapComponent.mapReady$.subscribe(function (map) { return _this.initialize(); });\n        }\n    };\n    CustomMarker.prototype.ngOnChanges = function (changes) {\n        this.inputChanges$.next(changes);\n    };\n    CustomMarker.prototype.ngOnDestroy = function () {\n        this.inputChanges$.complete();\n        this.nguiMapComponent.removeFromMapObjectGroup('CustomMarker', this.mapObject);\n        if (this.mapObject) {\n            this.nguiMap.clearObjectEvents(OUTPUTS$3, this, 'mapObject');\n        }\n    };\n    CustomMarker.prototype.initialize = function () {\n        var _this = this;\n        this.el = this.elementRef.nativeElement;\n        this.mapObject = getCustomMarkerOverlayView(this.el, this['position']);\n        this.mapObject.setMap(this.nguiMapComponent.map);\n        this.nguiMap.setObjectEvents(OUTPUTS$3, this, 'mapObject');\n        this.inputChanges$.pipe(debounceTime(1000), tap(function (changes) { return _this.nguiMap.updateGoogleObject(_this.mapObject, changes); })).subscribe();\n        this.nguiMapComponent.addToMapObjectGroup('CustomMarker', this.mapObject);\n        this.initialized$.emit(this.mapObject);\n    };\n    return CustomMarker;\n}());\nCustomMarker.decorators = [\n    { type: Component, args: [{\n                selector: 'ngui-map > custom-marker',\n                inputs: INPUTS$3,\n                outputs: OUTPUTS$3,\n                template: \"\\n    <ng-content></ng-content>\\n  \",\n            },] },\n];\nCustomMarker.ctorParameters = function () { return [\n    { type: NguiMapComponent, },\n    { type: ElementRef, },\n    { type: NguiMap, },\n]; };\nCustomMarker.propDecorators = {\n    \"initialized$\": [{ type: Output },],\n};\nvar INPUTS$4 = [\n    'center', 'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'map', 'radius',\n    'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'options',\n    'geoFallbackCenter'\n];\nvar OUTPUTS$4 = [\n    'centerChanged', 'click', 'dblclick', 'drag', 'dragend', 'dragstart',\n    'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'radiusChanged', 'rightclick',\n];\nvar Circle = /** @class */ (function (_super) {\n    __extends(Circle, _super);\n    function Circle(nguiMapComp) {\n        var _this = _super.call(this, nguiMapComp, 'Circle', INPUTS$4, OUTPUTS$4) || this;\n        _this.nguiMapComp = nguiMapComp;\n        _this.objectOptions = ({});\n        return _this;\n    }\n    Circle.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.setCenter();\n    };\n    Circle.prototype.setCenter = function () {\n        var _this = this;\n        if (!this['center']) {\n            this._subscriptions.push(this.nguiMapComp.geolocation.getCurrentPosition().subscribe(function (center) {\n                var latLng = new google.maps.LatLng(center.coords.latitude, center.coords.longitude);\n                _this.mapObject.setCenter(latLng);\n            }, function (error) {\n                console.error('ngui-map, error in finding the current position');\n                _this.mapObject.setCenter(_this.objectOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n            }));\n        }\n        else if (typeof this['center'] === 'string') {\n            this._subscriptions.push(this.nguiMapComp.geoCoder.geocode({ address: this['center'] }).subscribe(function (results) {\n                _this.mapObject.setCenter(results[0].geometry.location);\n            }, function (error) {\n                console.error('ngui-map, error in finding location from', _this['center']);\n                _this.mapObject.setCenter(_this.objectOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n            }));\n        }\n    };\n    return Circle;\n}(BaseMapDirective));\nCircle.decorators = [\n    { type: Directive, args: [{\n                selector: 'ngui-map>circle, ngui-map>map-circle',\n                inputs: INPUTS$4,\n                outputs: OUTPUTS$4,\n            },] },\n];\nCircle.ctorParameters = function () { return [\n    { type: NguiMapComponent, },\n]; };\nvar INPUTS$5 = ['controlPosition', 'controls', 'drawingMode', 'featureFactory', 'style', 'geoJson', 'geoJsonUrl'];\nvar OUTPUTS$5 = [\n    'addfeature', 'click', 'dblclick', 'mousedown', 'mouseout', 'mouseover',\n    'mouseup', 'removefeature', 'removeproperty', 'rightclick', 'setgeometry', 'setproperty'\n];\nvar DataLayer = /** @class */ (function (_super) {\n    __extends(DataLayer, _super);\n    function DataLayer(nguiMapComponent) {\n        return _super.call(this, nguiMapComponent, 'Data', INPUTS$5, OUTPUTS$5) || this;\n    }\n    DataLayer.prototype.initialize = function () {\n        if (this['geoJson']) {\n            this.nguiMapComponent.map.data.addGeoJson(this['geoJson']);\n        }\n        else if (this['geoJsonUrl']) {\n            this.nguiMapComponent.map.data.loadGeoJson(this['geoJsonUrl']);\n        }\n        else {\n            this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n            this.nguiMapComponent.map.data.add(this.objectOptions);\n        }\n        this.mapObject = this.nguiMapComponent.map.data;\n        this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n        this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n        this.initialized$.emit(this.mapObject);\n    };\n    return DataLayer;\n}(BaseMapDirective));\nDataLayer.decorators = [\n    { type: Directive, args: [{\n                selector: 'ngui-map > data-layer',\n                inputs: INPUTS$5,\n                outputs: OUTPUTS$5,\n            },] },\n];\nDataLayer.ctorParameters = function () { return [\n    { type: NguiMapComponent, },\n]; };\nvar INPUTS$6 = [\n    'directions', 'draggable', 'hideRouteList', 'infoWindow', 'panel', 'markerOptions',\n    'polylineOptions', 'preserveViewport', 'routeIndex', 'suppressBicyclingLayer',\n    'suppressInfoWindows', 'suppressMarkers', 'suppressPolylines'\n];\nvar OUTPUTS$6 = ['directions_changed'];\nvar DirectionsRenderer = /** @class */ (function (_super) {\n    __extends(DirectionsRenderer, _super);\n    function DirectionsRenderer(nguiMapComponent, geolocation) {\n        var _this = _super.call(this, nguiMapComponent, 'DirectionsRenderer', INPUTS$6, OUTPUTS$6) || this;\n        _this.geolocation = geolocation;\n        return _this;\n    }\n    DirectionsRenderer.prototype.initialize = function () {\n        this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n        if (typeof this.objectOptions['panel'] === 'string') {\n            this.objectOptions['panel'] = document.querySelector(this.objectOptions['panel']);\n        }\n        this.directionsService = new google.maps.DirectionsService();\n        this.directionsRenderer = new google.maps.DirectionsRenderer(this.objectOptions);\n        this.directionsRenderer.setMap(this.nguiMapComponent.map);\n        this.showDirections(this.directionsRequest);\n        this.nguiMap.setObjectEvents(this.outputs, this, 'directionsRenderer');\n        this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n        this.initialized$.emit(this.directionsRenderer);\n    };\n    DirectionsRenderer.prototype.ngOnChanges = function (changes) {\n        var newOptions = {};\n        for (var key in changes) {\n            if (this.inputs.indexOf(key) !== -1) {\n                newOptions[key] = this.optionBuilder.googlize(changes[key].currentValue);\n            }\n        }\n        if (changes['directionsRequest'] && this.directionsRenderer) {\n            this.directionsService && this.showDirections(this.directionsRequest);\n        }\n    };\n    DirectionsRenderer.prototype.showDirections = function (directionsRequest) {\n        var _this = this;\n        this.directionsService.route(directionsRequest, function (response, status) {\n            if (!_this.directionsRenderer) {\n                return;\n            }\n            if (status === google.maps.DirectionsStatus.OK) {\n                _this.directionsRenderer.setDirections(response);\n            }\n            else {\n                console.error('Directions request failed due to ' + status);\n            }\n        });\n    };\n    DirectionsRenderer.prototype.ngOnDestroy = function () {\n        _super.prototype.ngOnDestroy.call(this);\n        this.nguiMap.clearObjectEvents(this.outputs, this, 'directionsRenderer');\n    };\n    return DirectionsRenderer;\n}(BaseMapDirective));\nDirectionsRenderer.decorators = [\n    { type: Directive, args: [{\n                selector: 'ngui-map > directions-renderer',\n                inputs: INPUTS$6,\n                outputs: OUTPUTS$6,\n            },] },\n];\nDirectionsRenderer.ctorParameters = function () { return [\n    { type: NguiMapComponent, },\n    { type: NavigatorGeolocation, },\n]; };\nDirectionsRenderer.propDecorators = {\n    \"directionsRequest\": [{ type: Input, args: ['directions-request',] },],\n};\nvar INPUTS$7 = [\n    'options',\n    'circleOptions', 'drawingControl', 'drawingControlOptions', 'drawingMode',\n    'map', 'markerOptions', 'polygonOptions', 'polylineOptions', 'rectangleOptions'\n];\nvar OUTPUTS$7 = [\n    'circlecomplete', 'markercomplete', 'overlaycomplete',\n    'polygoncomplete', 'polylinecomplete', 'rectanglecomplete'\n];\nvar DrawingManager = /** @class */ (function (_super) {\n    __extends(DrawingManager, _super);\n    function DrawingManager(nguiMapComp) {\n        var _this = _super.call(this, nguiMapComp, 'DrawingManager', INPUTS$7, OUTPUTS$7) || this;\n        _this.libraryName = 'drawing';\n        return _this;\n    }\n    return DrawingManager;\n}(BaseMapDirective));\nDrawingManager.decorators = [\n    { type: Directive, args: [{\n                selector: 'ngui-map > drawing-manager',\n                inputs: INPUTS$7,\n                outputs: OUTPUTS$7,\n            },] },\n];\nDrawingManager.ctorParameters = function () { return [\n    { type: NguiMapComponent, },\n]; };\nvar INPUTS$8 = ['url', 'bounds', 'clickable', 'opacity'];\nvar OUTPUTS$8 = ['click', 'dblclick'];\nvar GroundOverlay = /** @class */ (function (_super) {\n    __extends(GroundOverlay, _super);\n    function GroundOverlay(nguiMapComp) {\n        var _this = _super.call(this, nguiMapComp, 'GroundOverlay', INPUTS$8, OUTPUTS$8) || this;\n        _this.objectOptions = ({});\n        return _this;\n    }\n    GroundOverlay.prototype.initialize = function () {\n        this.objectOptions = this.optionBuilder.googlizeAllInputs(['clickable', 'opacity'], this);\n        this.mapObject = new google.maps.GroundOverlay(this['url'], this['bounds'], this.objectOptions);\n        this.mapObject.setMap(this.nguiMapComponent.map);\n        this.mapObject['mapObjectName'] = this.mapObjectName;\n        this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n        this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n        this.initialized$.emit(this.mapObject);\n    };\n    return GroundOverlay;\n}(BaseMapDirective));\nGroundOverlay.decorators = [\n    { type: Directive, args: [{\n                selector: 'ngui-map > ground-overlay',\n                inputs: INPUTS$8,\n                outputs: OUTPUTS$8,\n            },] },\n];\nGroundOverlay.ctorParameters = function () { return [\n    { type: NguiMapComponent, },\n]; };\nvar INPUTS$9 = ['data', 'dissipating', 'gradient', 'maxIntensity', 'opacity', 'radius', 'options'];\nvar OUTPUTS$9 = [];\nvar HeatmapLayer = /** @class */ (function (_super) {\n    __extends(HeatmapLayer, _super);\n    function HeatmapLayer(nguiMapComp) {\n        var _this = _super.call(this, nguiMapComp, 'HeatmapLayer', INPUTS$9, OUTPUTS$9) || this;\n        _this.libraryName = 'visualization';\n        return _this;\n    }\n    return HeatmapLayer;\n}(BaseMapDirective));\nHeatmapLayer.decorators = [\n    { type: Directive, args: [{\n                selector: 'ngui-map > heatmap-layer',\n                inputs: INPUTS$9,\n                outputs: OUTPUTS$9,\n            },] },\n];\nHeatmapLayer.ctorParameters = function () { return [\n    { type: NguiMapComponent, },\n]; };\nvar INPUTS$10 = ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex', 'options'];\nvar OUTPUTS$10 = ['click', 'defaultviewport_changed', 'status_changed'];\nvar KmlLayer = /** @class */ (function (_super) {\n    __extends(KmlLayer, _super);\n    function KmlLayer(nguiMapComp) {\n        return _super.call(this, nguiMapComp, 'KmlLayer', INPUTS$10, OUTPUTS$10) || this;\n    }\n    return KmlLayer;\n}(BaseMapDirective));\nKmlLayer.decorators = [\n    { type: Directive, args: [{\n                selector: 'ngui-map > kml-layer',\n                inputs: INPUTS$10,\n                outputs: OUTPUTS$10,\n            },] },\n];\nKmlLayer.ctorParameters = function () { return [\n    { type: NguiMapComponent, },\n]; };\nvar INPUTS$11 = [\n    'anchorPoint', 'animation', 'clickable', 'cursor', 'draggable', 'icon', 'label', 'opacity',\n    'optimized', 'place', 'position', 'shape', 'title', 'visible', 'zIndex', 'options',\n    'geoFallbackPosition'\n];\nvar OUTPUTS$11 = [\n    'animationChanged', 'click', 'clickableChanged', 'cursorChanged', 'dblclick', 'drag', 'dragend', 'draggableChanged',\n    'dragstart', 'flatChanged', 'iconChanged', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'positionChanged', 'rightclick',\n    'shapeChanged', 'titleChanged', 'visibleChanged', 'zindexChanged'\n];\nvar Marker = /** @class */ (function (_super) {\n    __extends(Marker, _super);\n    function Marker(nguiMapComp) {\n        var _this = _super.call(this, nguiMapComp, 'Marker', INPUTS$11, OUTPUTS$11) || this;\n        _this.nguiMapComp = nguiMapComp;\n        _this.objectOptions = ({});\n        return _this;\n    }\n    Marker.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.nguiMapComponent.mapIdledOnce) {\n            this.initialize();\n        }\n        else {\n            this.nguiMapComponent.mapReady$.subscribe(function (map) { return _this.initialize(); });\n        }\n    };\n    Marker.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.setPosition();\n    };\n    Marker.prototype.setPosition = function () {\n        var _this = this;\n        if (!this['position']) {\n            this._subscriptions.push(this.nguiMapComp.geolocation.getCurrentPosition().subscribe(function (position) {\n                var latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n                _this.mapObject.setPosition(latLng);\n            }, function (error) {\n                console.error('ngui-map, error finding the current location');\n                _this.mapObject.setPosition(_this.objectOptions['geoFallbackPosition'] || new google.maps.LatLng(0, 0));\n            }));\n        }\n        else if (typeof this['position'] === 'string') {\n            this._subscriptions.push(this.nguiMapComp.geoCoder.geocode({ address: this['position'] }).subscribe(function (results) {\n                _this.mapObject.setPosition(results[0].geometry.location);\n            }, function (error) {\n                console.error('ngui-map, error finding the location from', _this['position']);\n                _this.mapObject.setPosition(_this.objectOptions['geoFallbackPosition'] || new google.maps.LatLng(0, 0));\n            }));\n        }\n    };\n    return Marker;\n}(BaseMapDirective));\nMarker.decorators = [\n    { type: Directive, args: [{\n                selector: 'ngui-map > marker',\n                inputs: INPUTS$11,\n                outputs: OUTPUTS$11,\n            },] },\n];\nMarker.ctorParameters = function () { return [\n    { type: NguiMapComponent, },\n]; };\nvar PlacesAutoComplete = /** @class */ (function () {\n    function PlacesAutoComplete(optionBuilder, elementRef, apiLoader) {\n        var _this = this;\n        this.optionBuilder = optionBuilder;\n        this.elementRef = elementRef;\n        this.apiLoader = apiLoader;\n        this.place_changed = new EventEmitter();\n        this.initialized$ = new EventEmitter();\n        this.initialize = function () {\n            _this.objectOptions =\n                _this.optionBuilder.googlizeAllInputs(['bounds', 'componentRestrictions', 'types'], _this);\n            if (!google.maps.places) {\n                throw missingLibraryError('PlacesAutoComplete', 'places');\n            }\n            _this.autocomplete = new google.maps.places.Autocomplete(_this.elementRef.nativeElement, _this.objectOptions);\n            _this.autocomplete.addListener('place_changed', function (place) {\n                _this.place_changed.emit(_this.autocomplete.getPlace());\n            });\n            _this.initialized$.emit(_this.autocomplete);\n        };\n        apiLoader.load();\n        apiLoader.api$\n            .pipe(first())\n            .subscribe(function () { return _this.initialize(); });\n    }\n    return PlacesAutoComplete;\n}());\nPlacesAutoComplete.decorators = [\n    { type: Directive, args: [{\n                selector: '[places-auto-complete]'\n            },] },\n];\nPlacesAutoComplete.ctorParameters = function () { return [\n    { type: OptionBuilder, },\n    { type: ElementRef, },\n    { type: NgMapApiLoader, },\n]; };\nPlacesAutoComplete.propDecorators = {\n    \"bounds\": [{ type: Input },],\n    \"componentRestrictions\": [{ type: Input },],\n    \"types\": [{ type: Input },],\n    \"place_changed\": [{ type: Output, args: ['place_changed',] },],\n    \"initialized$\": [{ type: Output },],\n};\nvar INPUTS$12 = [\n    'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'paths',\n    'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'options',\n];\nvar OUTPUTS$12 = [\n    'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'mousedown',\n    'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick',\n];\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    function Polygon(nguiMapComp) {\n        return _super.call(this, nguiMapComp, 'Polygon', INPUTS$12, OUTPUTS$12) || this;\n    }\n    return Polygon;\n}(BaseMapDirective));\nPolygon.decorators = [\n    { type: Directive, args: [{\n                selector: 'ngui-map>polygon, ngui-map>map-polygon',\n                inputs: INPUTS$12,\n                outputs: OUTPUTS$12,\n            },] },\n];\nPolygon.ctorParameters = function () { return [\n    { type: NguiMapComponent, },\n]; };\nvar INPUTS$13 = [\n    'clickable', 'draggable', 'editable', 'geodesic', 'icons', 'path', 'strokeColor',\n    'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'options'\n];\nvar OUTPUTS$13 = [\n    'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'mousedown',\n    'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick'\n];\nvar Polyline = /** @class */ (function (_super) {\n    __extends(Polyline, _super);\n    function Polyline(nguiMapComp) {\n        return _super.call(this, nguiMapComp, 'Polyline', INPUTS$13, OUTPUTS$13) || this;\n    }\n    return Polyline;\n}(BaseMapDirective));\nPolyline.decorators = [\n    { type: Directive, args: [{\n                selector: 'ngui-map > polyline',\n                inputs: INPUTS$13,\n                outputs: OUTPUTS$13,\n            },] },\n];\nPolyline.ctorParameters = function () { return [\n    { type: NguiMapComponent, },\n]; };\nvar INPUTS$14 = [\n    'selector', 'options',\n    'addressControl', 'addressControlOptions', 'clickToGo', 'disableDefaultUI', 'disableDoubleClickZoom',\n    'enableCloseButton', 'fullscreenControl', 'fullscreenControlOptions', 'imageDateControl', 'linksControl',\n    'motionTracking', 'motionTrackingControl', 'panControl', 'panControlOptions', 'pano',\n    'position', 'pov', 'scrollwheel', 'showRoadLabels', 'visible', 'zoomControl', 'zoomControlOptions'\n];\nvar OUTPUTS$14 = [\n    'closeclick', 'pano_changed', 'position_changed', 'pov_changed', 'resize', 'status_changed',\n    'visible_changed', 'zoom_changed'\n];\nvar StreetViewPanorama = /** @class */ (function (_super) {\n    __extends(StreetViewPanorama, _super);\n    function StreetViewPanorama(nguiMapComp) {\n        return _super.call(this, nguiMapComp, 'StreetViewPanorama', INPUTS$14, OUTPUTS$14) || this;\n    }\n    StreetViewPanorama.prototype.initialize = function () {\n        this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n        var element;\n        if (this.objectOptions.selector) {\n            element = document.querySelector(this['selector']);\n            delete this.objectOptions.selector;\n        }\n        else {\n            element = this.nguiMapComponent.el;\n        }\n        typeof this.objectOptions.position === 'string' && (delete this.objectOptions.position);\n        this.mapObject = new google.maps[this.mapObjectName](element, this.objectOptions);\n        this.mapObject['mapObjectName'] = this.mapObjectName;\n        this.mapObject['nguiMapComponent'] = this.nguiMapComponent;\n        this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n        this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n        this.initialized$.emit(this.mapObject);\n    };\n    StreetViewPanorama.prototype.ngOnDestroy = function () {\n        if (this.nguiMapComponent.el) {\n            this.nguiMap.clearObjectEvents(this.outputs, this, 'mapObject');\n        }\n    };\n    return StreetViewPanorama;\n}(BaseMapDirective));\nStreetViewPanorama.decorators = [\n    { type: Directive, args: [{\n                selector: 'ngui-map > street-view-panorama',\n                inputs: INPUTS$14,\n                outputs: OUTPUTS$14,\n            },] },\n];\nStreetViewPanorama.ctorParameters = function () { return [\n    { type: NguiMapComponent, },\n]; };\nvar INPUTS$15 = ['autoRefresh', 'options'];\nvar OUTPUTS$15 = [];\nvar TrafficLayer = /** @class */ (function (_super) {\n    __extends(TrafficLayer, _super);\n    function TrafficLayer(nguiMapComp) {\n        return _super.call(this, nguiMapComp, 'TrafficLayer', INPUTS$15, OUTPUTS$15) || this;\n    }\n    return TrafficLayer;\n}(BaseMapDirective));\nTrafficLayer.decorators = [\n    { type: Directive, args: [{\n                selector: 'ngui-map > traffic-layer',\n                inputs: INPUTS$15,\n                outputs: OUTPUTS$15,\n            },] },\n];\nTrafficLayer.ctorParameters = function () { return [\n    { type: NguiMapComponent, },\n]; };\nvar INPUTS$16 = [];\nvar OUTPUTS$16 = [];\nvar TransitLayer = /** @class */ (function (_super) {\n    __extends(TransitLayer, _super);\n    function TransitLayer(nguiMapComp) {\n        return _super.call(this, nguiMapComp, 'TransitLayer', INPUTS$16, OUTPUTS$16) || this;\n    }\n    return TransitLayer;\n}(BaseMapDirective));\nTransitLayer.decorators = [\n    { type: Directive, args: [{\n                selector: 'ngui-map > transit-layer',\n                inputs: INPUTS$16,\n                outputs: OUTPUTS$16,\n            },] },\n];\nTransitLayer.ctorParameters = function () { return [\n    { type: NguiMapComponent, },\n]; };\nvar COMPONENTS_DIRECTIVES = [\n    NguiMapComponent, InfoWindow,\n    Marker, Circle, CustomMarker, Polygon, InfoWindow, Polyline, GroundOverlay,\n    TransitLayer, TrafficLayer, HeatmapLayer, BicyclingLayer, KmlLayer, DataLayer,\n    StreetViewPanorama, PlacesAutoComplete, DirectionsRenderer,\n    DrawingManager,\n];\nvar NguiMapModule = /** @class */ (function () {\n    function NguiMapModule() {\n    }\n    NguiMapModule.forRoot = function (config) {\n        if (config === void 0) { config = {}; }\n        return {\n            ngModule: NguiMapModule,\n            providers: [\n                { provide: NG_MAP_CONFIG_TOKEN, useValue: config }\n            ],\n        };\n    };\n    return NguiMapModule;\n}());\nNguiMapModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule],\n                declarations: COMPONENTS_DIRECTIVES,\n                exports: [COMPONENTS_DIRECTIVES],\n                providers: [\n                    GeoCoder,\n                    NavigatorGeolocation,\n                    NguiMap,\n                    OptionBuilder,\n                    { provide: NgMapApiLoader, useClass: NgMapAsyncCallbackApiLoader },\n                ]\n            },] },\n];\n\nexport { BicyclingLayer, NavigatorGeolocation, OptionBuilder, NG_MAP_CONFIG_TOKEN, NgMapApiLoader, NgMapAsyncApiLoader, NgMapAsyncCallbackApiLoader, NguiMapComponent, InfoWindow, CustomMarker, Circle, DataLayer, DirectionsRenderer, DrawingManager, GeoCoder, GroundOverlay, HeatmapLayer, KmlLayer, Marker, NguiMap, PlacesAutoComplete, Polygon, Polyline, StreetViewPanorama, TrafficLayer, TransitLayer, NguiMapModule, BaseMapDirective as ɵa };\n//# sourceMappingURL=ngui-map.js.map\n","module.exports = \"        <!-- START CONTENT INNER -->\\r\\n        <pg-container extraHorizontalClass=\\\"relative\\\">\\r\\n          <div class=\\\"map-controls\\\">\\r\\n            <div class=\\\"pull-left\\\">\\r\\n              <div class=\\\"btn-group btn-group-vertical\\\">\\r\\n                <button (click)=\\\"zoomIn()\\\" class=\\\"btn btn-success btn-xs\\\"><i class=\\\"fa fa-plus\\\"></i>\\r\\n                </button>\\r\\n                <button (click)=\\\"zoomOut()\\\" class=\\\"btn btn-success btn-xs\\\"><i class=\\\"fa fa-minus\\\"></i>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </pg-container>\\r\\n        <!-- Map -->\\r\\n        <div class=\\\"map-container full-width full-height\\\">\\r\\n          <ngui-map  [zoom]=\\\"zoomLevel\\\" [styles]=\\\"styles\\\" [center]=\\\"center\\\" [disableDefaultUI]=\\\"disableDefaultUI\\\"></ngui-map>\\r\\n        </div>\\r\\n        <!-- END CONTENT INNER -->\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvLnBhZ2VzL21hcHMvZ29vZ2xlL2dvb2dsZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { pagesToggleService } from '../../@pages/services/toggler.service'\r\nimport { Subscriber } from 'rxjs/Subscriber'\r\n\r\n@Component({\r\n  selector: 'google-map-page',\r\n  templateUrl: './google.component.html',\r\n  styleUrls: ['./google.component.scss'],\r\n  host      : {\r\n    '[class.relative]': 'true',\r\n  }\r\n})\r\nexport class GoogleMapPage implements OnInit {\r\n  zoomLevel = 11;\r\n  center  = {lat: 40.6700, lng: -73.9400};\r\n  disableDefaultUI = true;\r\n  styles = [{\r\n    featureType: 'water',\r\n    elementType: 'all',\r\n        stylers: [{\r\n            hue: '#e9ebed'\r\n        }, {\r\n            saturation: -78\r\n        }, {\r\n            lightness: 67\r\n        }, {\r\n            visibility: 'simplified'\r\n        }]\r\n    }, {\r\n        featureType: 'landscape',\r\n        elementType: 'all',\r\n        stylers: [{\r\n            hue: '#ffffff'\r\n        }, {\r\n            saturation: -100\r\n        }, {\r\n            lightness: 100\r\n        }, {\r\n            visibility: 'simplified'\r\n        }]\r\n    }, {\r\n        featureType: 'road',\r\n        elementType: 'geometry',\r\n        stylers: [{\r\n            hue: '#bbc0c4'\r\n        }, {\r\n            saturation: -93\r\n        }, {\r\n            lightness: 31\r\n        }, {\r\n            visibility: 'simplified'\r\n        }]\r\n    }, {\r\n        featureType: 'poi',\r\n        elementType: 'all',\r\n        stylers: [{\r\n            hue: '#ffffff'\r\n        }, {\r\n            saturation: -100\r\n        }, {\r\n            lightness: 100\r\n        }, {\r\n            visibility: 'off'\r\n        }]\r\n    }, {\r\n        featureType: 'road.local',\r\n        elementType: 'geometry',\r\n        stylers: [{\r\n            hue: '#e9ebed'\r\n        }, {\r\n            saturation: -90\r\n        }, {\r\n            lightness: -8\r\n        }, {\r\n            visibility: 'simplified'\r\n        }]\r\n    }, {\r\n        featureType: 'transit',\r\n        elementType: 'all',\r\n        stylers: [{\r\n            hue: '#e9ebed'\r\n        }, {\r\n            saturation: 10\r\n        }, {\r\n            lightness: 69\r\n        }, {\r\n            visibility: 'on'\r\n        }]\r\n    }, {\r\n        featureType: 'administrative.locality',\r\n        elementType: 'all',\r\n        stylers: [{\r\n            hue: '#2c2e33'\r\n        }, {\r\n            saturation: 7\r\n        }, {\r\n            lightness: 19\r\n        }, {\r\n            visibility: 'on'\r\n        }]\r\n    }, {\r\n        featureType: 'road',\r\n        elementType: 'labels',\r\n        stylers: [{\r\n            hue: '#bbc0c4'\r\n        }, {\r\n            saturation: -93\r\n        }, {\r\n            lightness: 31\r\n        }, {\r\n            visibility: 'on'\r\n        }]\r\n    }, {\r\n        featureType: 'road.arterial',\r\n        elementType: 'labels',\r\n        stylers: [{\r\n            hue: '#bbc0c4'\r\n        }, {\r\n            saturation: -93\r\n        }, {\r\n            lightness: -2\r\n        }, {\r\n            visibility: 'simplified'\r\n        }]\r\n    }];\r\n  \r\n    constructor(private route: ActivatedRoute,private toggler:pagesToggleService) {}\r\n    parameter:string;\r\n    private sub: any;\r\n    ngOnInit() {\r\n        this.sub = this.route.params.subscribe(params => {\r\n            this.parameter = params['type'];\r\n            //Show header for casual/executive and coporate\r\n            if(this.parameter != \"with-header\"){\r\n                this.toggler.setHeaderClass(\"transparent\");\r\n            }\r\n         });\r\n        this.toggler.setBodyLayoutClass(\"no-header\");\r\n        this.toggler.setPageContainer(\"full-height\");\r\n        this.toggler.setContent(\"full-width full-height overlay-footer relative\");\r\n        setTimeout(()=>{ \r\n            this.toggler.toggleFooter(false);\r\n        });\r\n    }\r\n\r\n    zoomIn(){\r\n        this.zoomLevel++;\r\n    }\r\n\r\n    zoomOut(){\r\n        this.zoomLevel--;\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n//Core Pages Layout Components\r\nimport { SharedModule } from '../@pages/components/shared.module';\r\n\r\nimport { GoogleMapPage } from './google/google.component';\r\nimport { NguiMapModule} from '@ngui/map';\r\nimport { MapsRoutes  } from './maps.routing';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(MapsRoutes),\r\n    SharedModule,\r\n    NguiMapModule.forRoot({apiUrl: 'https://maps.google.com/maps/api/js?key=AIzaSyCR8KzV6CpcQpRvYDb0xp6Vw46HSN6qOes'})\r\n  ],\r\n  declarations: [GoogleMapPage]\r\n})\r\nexport class MapsModule { }\r\n","import { Routes } from '@angular/router';\r\nimport { GoogleMapPage } from './google/google.component';\r\nexport const MapsRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [{\r\n      path: 'google',\r\n      component: GoogleMapPage\r\n    },\r\n    {\r\n      path: 'google/:type',\r\n      component: GoogleMapPage\r\n    }]\r\n  }\r\n];"],"sourceRoot":""}