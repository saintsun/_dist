{"version":3,"sources":["webpack:///./src/.pages/@pages/components/tag/tag.component.ts","webpack:///./src/.pages/@pages/components/tag/tag.control.component.html","webpack:///./src/.pages/@pages/components/tag/tag.control.component.ts","webpack:///./src/.pages/@pages/components/tag/tag.module.ts","webpack:///./src/.pages/@pages/components/tag/tag.scss"],"names":[],"mappings":"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","file":"default~app-app-module~email-email-module~forms-forms-module.js","sourcesContent":["import { AnimationEvent } from '@angular/animations';\r\nimport {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  HostListener,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { tagAnimation } from '../../animations/tag-animations';\r\nimport { toBoolean } from '../util/convert';\r\n\r\n@Component({\r\n  selector       : 'pg-tag',\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : [\r\n    tagAnimation\r\n  ],\r\n  template       : `\r\n    <span *ngIf=\"!_closed\"\r\n      class=\"label\"\r\n      [ngClass]=\"_colorclass\"\r\n      [@tagAnimation]\r\n      (@tagAnimation.done)=\"_afterClose($event)\">\r\n      <span [class]=\"_textClass\"><ng-content></ng-content></span>\r\n      <i class=\"pg pg-close\" (click)=\"_close($event)\" *ngIf=\"Closable\"></i>\r\n    </span>\r\n  `,\r\n  styleUrls      : [\r\n    './tag.scss',\r\n  ]\r\n})\r\nexport class pgTagComponent implements AfterViewInit {\r\n  private _closable = false;\r\n  _prefixCls = 'label';\r\n  _closed = false;\r\n  _colorclass = \"label-info\";\r\n  /** Whether tag is closable */\r\n  @Input()\r\n  set Closable(value: boolean) {\r\n    this._closable = toBoolean(value);\r\n  }\r\n\r\n  @Input()\r\n  set ColorClass(value: string) {\r\n    this._colorclass = value\r\n  }\r\n\r\n  get Closable(): boolean {\r\n    return this._closable;\r\n  }\r\n\r\n  /** The tag color */\r\n  @Input() color: string;\r\n\r\n  /** Event: emit before close */\r\n  @Output() BeforeClose = new EventEmitter<Event>();\r\n\r\n  // TODO: AnimationEvent is not subclass of Event, but all payloads should be unified\r\n  /** Event: emit after close */\r\n  @Output() Close = new EventEmitter<AnimationEvent>();\r\n\r\n  @HostBinding('attr.data-show')\r\n  get _dataShow(): boolean {\r\n    return !this._closed;\r\n  }\r\n\r\n  _afterClose(event: AnimationEvent): void {\r\n    if (this._closed) {\r\n      this.Close.emit(event);\r\n    }\r\n  }\r\n\r\n\r\n  get _textClass(): string {\r\n    return `${this._prefixCls}-text`;\r\n  }\r\n\r\n  _close(event: Event): void {\r\n    this.BeforeClose.emit(event);\r\n    if (event.defaultPrevented) {\r\n        return;\r\n    }\r\n    this._closed = true;\r\n  }\r\n\r\n\r\n  constructor(\r\n    private _elementRef: ElementRef,\r\n    private _render: Renderer2) {\r\n\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this._render.addClass(this._elementRef.nativeElement, `${this._prefixCls}-wrapper`);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"tags-control\\\" #wrapper>\\r\\n<pg-tag *ngFor=\\\"let tag of _tags; let i = index;\\\"\\r\\n      [Closable]=\\\"i !== 0\\\"\\r\\n      (Close)=\\\"handleClose(tag)\\\">\\r\\n      {{sliceTagName(tag)}}\\r\\n    </pg-tag>\\r\\n    <input class=\\\"form-control\\\" type=\\\"text\\\"\\r\\n      [(ngModel)]=\\\"inputValue\\\"\\r\\n      style=\\\"width: 78px;\\\"\\r\\n      (blur)=\\\"handleInputConfirm()\\\" (keydown.enter)=\\\"handleInputConfirm()\\\" (keydown.backspace)=\\\"handleInputBack()\\\" (focus)=\\\"handleFocus()\\\" (focusout)=\\\"handleFocusOut()\\\" placeholder=\\\"{{_placeholder}}\\\">\\r\\n    </div>\"","import { AnimationEvent } from '@angular/animations';\r\nimport {\r\n    forwardRef,\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  HostListener,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n  ViewEncapsulation,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { tagAnimation } from '../../animations/tag-animations';\r\nimport {pgTagComponent} from './tag.component';\r\nimport { toBoolean } from '../util/convert';\r\n\r\n@Component({\r\n  selector       : 'pg-tag-control',\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers    : [\r\n    {\r\n      provide    : NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => pgTagControl),\r\n      multi      : true\r\n    }\r\n  ],\r\n  templateUrl       : \"./tag.control.component.html\",\r\n  styleUrls      : [\"./tag.scss\"]\r\n})\r\nexport class pgTagControl implements OnInit, ControlValueAccessor {\r\n\r\n    onChange: (value: string[]) => void = () => null;\r\n    onTouched: () => void = () => null;\r\n    @ViewChild('wrapper') wrapper: ElementRef;\r\n    _tags =[];\r\n    inputValue = '';\r\n    _placeholder ='';\r\n    @Input() \r\n    set placeholder(value: string) {\r\n      this._placeholder = value\r\n    }\r\n\r\n    handleClose(removedTag: any): void {\r\n        this._tags = this._tags.filter(tag => tag !== removedTag);\r\n    }\r\n    sliceTagName(tag: string): string {\r\n        const isLongTag = tag.length > 20;\r\n        return isLongTag ? `${tag.slice(0, 20)}...` : tag;\r\n    }\r\n    handleInputConfirm(): void {\r\n        if (this.inputValue) {\r\n            this._tags.push(this.inputValue);\r\n        }\r\n        this.inputValue = '';\r\n   } \r\n   handleFocus():void{\r\n    this.wrapper.nativeElement.parentNode.parentNode.classList.add('focused');\r\n   } \r\n   handleFocusOut():void{\r\n    this.wrapper.nativeElement.parentNode.parentNode.classList.remove('focused');\r\n   }\r\n   handleInputBack():void{\r\n    if (!this.inputValue) {\r\n        this._tags.splice(-1,1);\r\n    }\r\n   }  \r\n   updateValue(value:string[] ): void {\r\n    this._tags = value;\r\n  }\r\n   writeValue(value: string[]): void {\r\n    this.updateValue(value);\r\n  }\r\n\r\n  registerOnChange(fn: (_: string[]) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n   ngOnInit(): void {\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { pgTagComponent } from './tag.component';\r\nimport { pgTagControl } from './tag.control.component';\r\n\r\n@NgModule({\r\n  imports     : [ CommonModule, FormsModule ],\r\n  declarations: [\r\n    pgTagControl,pgTagComponent\r\n  ],\r\n  exports     : [\r\n    pgTagControl,pgTagComponent\r\n  ]\r\n})\r\nexport class pgTagModule {\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvLnBhZ2VzL0BwYWdlcy9jb21wb25lbnRzL3RhZy90YWcuc2NzcyJ9 */\""],"sourceRoot":""}